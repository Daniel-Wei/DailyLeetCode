# 986. Interval List Intersections

*** You are given two lists of closed intervals, firstList and secondList,
        where firstList[i] = [starti, endi] and secondList[j] = [startj, endj]. 
    Each list of intervals is pairwise disjoint and in sorted order.

*** Return the intersection of these two interval lists.

*** A closed interval [a, b] (with a < b) denotes the set of real numbers x with a <= x <= b.

*** The intersection of two closed intervals is a set of real numbers that are either empty or represented as a closed interval. 
    For example, the intersection of [1, 3] and [2, 4] is [2, 3].

class Solution:
    def intervalIntersection(self, firstList: List[List[int]], secondList: List[List[int]]) -> List[List[int]]:
        i = k = 0
        res = []
        while i < len(firstList) and k < len(secondList):
            if firstList[i][0] >= secondList[k][0]:
                if firstList[i][0] <= secondList[k][1]:
                    if firstList[i][1] <= secondList[k][1]:
                        res += [[firstList[i][0], firstList[i][1]]]
                        i += 1
                        continue
                    else:
                        res += [[firstList[i][0], secondList[k][1]]]
                
                k += 1
            else:
                if secondList[k][0] <= firstList[i][1]:
                    if secondList[k][1] <= firstList[i][1]:
                        res += [[secondList[k][0], secondList[k][1]]]
                        k += 1
                        continue
                    else:
                        res += [[secondList[k][0], firstList[i][1]]]
                i += 1
        return res
        
Wrong Ans Point: consider total inside intervals

Input: [[3,5],[9,20]]
       [[4,5],[7,10],[11,12],[14,15],[16,20]]
   
Output: [[4,5],[9,10],[11,20],[14,20],[16,20]]

Expected: [[4,5],[9,10],[11,12],[14,15],[16,20]]
        
