# 1766. Tree of Coprimes


# Example 
** Input: nums = [2,3,3,2], edges = [[0,1],[1,2],[1,3]]
** Output: [-1,0,0,1]
** Explanation: In the above figure, each node's value is in parentheses.
                - Node 0 has no coprime ancestors.
                - Node 1 has only one ancestor, node 0. Their values are coprime (gcd(2,3) == 1).
                - Node 2 has two ancestors, nodes 1 and 0. Node 1's value is not coprime (gcd(3,3) == 3), but node 0's
                  value is (gcd(2,3) == 1), so node 0 is the closest valid ancestor.
                - Node 3 has two ancestors, nodes 1 and 0. It is coprime with node 1 (gcd(3,2) == 1), so node 1 is its
                  closest valid ancestor.

class Solution:
    def getCoprimes(self, nums: List[int], edges: List[List[int]]) -> List[int]:
        class Node:
            def __init__(self, value, index):
                self.prev = None
                self.value = value
                self.index = index
                self.children = []
                
        nodes = []
        for i in range(len(nums)):
            curr = Node(nums[i], i)
            nodes += [curr]
            
        if len(edges) == 0:
            return [-1]
            
        if edges[0][0] == 0:
            for edge in edges:
                pre = nodes[edge[0]]
                nex = nodes[edge[1]]
                nex.prev = pre
                pre.children += [nex]
        else:
            for edge in edges:
                pre = nodes[edge[1]]
                nex = nodes[edge[0]]
                nex.prev = pre
                pre.children += [nex]
        
        res = []
        from math import gcd
        for node in nodes:
            ance = node.prev
            found = False
            while ance is not None:
                if gcd(node.value, ance.value) == 1:
                    res += [ance.index]
                    found = True
                    break
                else:
                    ance = ance.prev
            if not found:
                res += [-1]
        return res
