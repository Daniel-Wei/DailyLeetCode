# 1868. Product of Two Run-Length Encoded Arrays

# Input: encoded1 = [[1,3],[2,1],[3,2]], encoded2 = [[2,3],[3,3]]
# Output: [[2,3],[6,1],[9,2]]
# Explanation: encoded1 expands to [1,1,1,2,3,3] and encoded2 expands to [2,2,2,3,3,3].
# prodNums = [2,2,2,6,9,9], which is compressed into the run-length encoded array [[2,3],[6,1],[9,2]].

class Solution:
    def findRLEArray(self, encoded1: List[List[int]], encoded2: List[List[int]]) -> List[List[int]]:
        i = j = 0
        res = []
        while i < len(encoded1) and j < len(encoded2):
            prod = encoded1[i][0] * encoded2[j][0]
            if len(res) == 0 or prod != res[-1][0]:
                res += [[prod, min(encoded1[i][1], encoded2[j][1])]]
            else:
                res[-1][1] += min(encoded1[i][1], encoded2[j][1])
            if encoded1[i][1] > encoded2[j][1]:
                encoded1[i][1] -= encoded2[j][1]
                j += 1
            elif encoded1[i][1] < encoded2[j][1]:
                encoded2[j][1] -= encoded1[i][1]
                i += 1
            else:
                i += 1
                j += 1
    
        return res 
