# 1229. Meeting Scheduler

*** Given the availability time slots arrays slots1 and slots2 of two people and a meeting duration duration, 
  return the earliest time slot that works for both of them and is of duration duration.

*** If there is no common time slot that satisfies the requirements, return an empty array.

*** The format of a time slot is an array of two elements [start, end] representing an inclusive time range from start to end.

class Solution:
    def minAvailableDuration(self, slots1: List[List[int]], slots2: List[List[int]], duration: int) -> List[int]:
        i = j = 0
        # arr.sort() can sort 2-d arrays, sorted(arr) only for 1-d arrays
        slots1.sort()
        slots2.sort()
        while i < len(slots1) and j < len(slots2):
            if slots1[i][0] >= slots2[j][0]:
                if slots1[i][1] - slots1[i][0] >= duration:
                    if slots1[i][0] <= slots2[j][1] and slots2[j][1] - slots1[i][0] >= duration:
                        return [slots1[i][0], slots1[i][0] + duration]
                    else:
                        j += 1
                else:
                    i += 1
            else: 
                if slots2[j][1] - slots2[j][0] >= duration:
                    if slots2[j][0] <= slots1[i][1] and slots1[i][1] - slots2[j][0] >= duration:
                        return [slots2[j][0], slots2[j][0] + duration]
                    else:
                        i += 1
                else:
                    j += 1
