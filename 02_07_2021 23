# 23ã€‚ Merge k Sorted Lists

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next

# You are given an array of k linked-lists lists, each linked-list is sorted in ascending order.
# Merge all the linked-lists into one sorted linked-list and return it.

from queue import PriorityQueue

class Solution:
    def mergeKLists(self, lists: List[ListNode]) -> ListNode:
        q = PriorityQueue()
        for node in lists:
            curr = node
            while curr:
                q.put(curr.val)
                curr = curr.next
                
        if q.empty():
            return None
                
        res = ListNode(q.get())
        curr = res
        
        while not q.empty():
            curr.next = ListNode(q.get())
            curr = curr.next
       
        return res
